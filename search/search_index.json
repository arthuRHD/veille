{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenue","text":"<p>Ce site regroupe des documentations ainsi que des m\u00e9mos professionnels. C'est un r\u00e9ferentiel que j'utilise lorsque je dois prendre des notes concernant une technologie ou un concept que je veux apprendre.</p> <p>Je vous invite \u00e0 me faire des retours et de me corriger si mes documentations sont incorrectes.</p> <p>Vous pouvez me joindre par mail: hello@arthurrichard.fr</p>"},{"location":"DevOps/apm/","title":"Mise en place d'une stack de monitoring","text":"<p>WIP</p>"},{"location":"DevOps/aws/","title":"AWS","text":"<p>AWS est une plateforme regroupant de nombreux services d'h\u00e9bergement (CPU, Base de donn\u00e9es, Fichiers statiques). C'est une Iaas.</p> <p></p>"},{"location":"DevOps/aws/#avantages","title":"Avantages","text":"<ul> <li>Agilit\u00e9, augmente l'agilit\u00e9 de l'entreprise</li> <li>Mod\u00e8le de paiement \u00e0 l'utilisation, echange de l'argent contre du CPU</li> <li>Facilite l'agrandissement d'une infrastructure IT d'une entreprise</li> <li>Permet d'\u00eatre atteignable depuis le monde entier en quelques minutes</li> <li>S\u00e9curit\u00e9, \u00e0 travers le mod\u00e8le de responsabilit\u00e9 partag\u00e9</li> <li>R\u00e9silience et disponible, performe comme promis par AWS  </li> <li>Elasticit\u00e9, permet d'ajouter ou de supprimer rapidement des ressources automatiquement</li> </ul>"},{"location":"DevOps/aws/#mode-dacces","title":"Mode d'acc\u00e8s","text":"<p>Chaque mode d'acc\u00e8s d\u00e9pend de l'utilisation. </p> <p>Le site est excellent pour prendre en main les services AWS et configurer les budgets comme il le faut.</p> <p>L'interface en ligne de commande, permet de gagner du temps en faisant abstraction de la terrible navigation du site. C'est utile si nous voulons aller droit au but. </p> <p>C'est en g\u00e9n\u00e9ral utilis\u00e9 pour automatiser des actions/d\u00e9ploiement r\u00e9p\u00e9titifs. Cependant, cela demande de la configuration en amont et il faut faire attention o\u00f9 nous persistons notre configuration AWS sur notre machine locale. Le SDK pr\u00e9sente les m\u00eames avantages &amp; inconv\u00e9nients que le CLI. Il en va de m\u00eame pour l'utilisation avec Terraform.</p>"},{"location":"DevOps/aws/#cli","title":"CLI","text":"<p>Pour int\u00e9ragir avec AWS depuis le terminal. Il faut r\u00e9cup\u00e9rer un cl\u00e9 d'acc\u00e8s depuis notre session connect\u00e9e sur le site. Il faut cliquer sur notre compte en haut \u00e0 droite et aller dans Informations d'identification de s\u00e9curit\u00e9 ou dans le service IAM.</p> <p>Ensuite, il vous reste plus qu'\u00e0 installer le CLI</p> <pre><code>$ curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\nunzip awscliv2.zip\nsudo ./aws/install\n</code></pre> <p>Si vous l'avez d\u00e9j\u00e0 sur votre machine locale mais que le client n'est pas \u00e0 jour, vous pouvez le mettre \u00e0 jour comme ceci</p> <pre><code>$ sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update\n</code></pre> <p>Puis, v\u00e9rifiez que le client est bien install\u00e9 et trouvable dans le terminal</p> <pre><code>$ aws --version\n</code></pre> <p>Enfin, on configure avec la cl\u00e9 d'acc\u00e8s g\u00e9n\u00e9r\u00e9e.</p> <pre><code>$ aws configure\n</code></pre> <p>Si vous rencontrez des soucis de configuration et qui vous avez un besoin urgent d'utiliser le CLI, vous pouvez regarder le service CloudShell qui pr\u00e9-configur\u00e9 et poss\u00e8de m\u00eame des langages de programmation install\u00e9.</p> <p>Si vous avez besoin d'informations plus pouss\u00e9s concernant le CLI d'AWS, je vous encourage \u00e0 aller visiter la documentation d\u00e9crivant chaque commande et sous-commande ici.</p> <p>Il existe une autocompl\u00e9tion possible dans votre terminal, la configuration est expliqu\u00e9e ici.</p>"},{"location":"DevOps/aws/#terraform","title":"Terraform","text":"<p>TODO</p>"},{"location":"DevOps/aws/#iam","title":"IAM","text":"<p>TODO</p>"},{"location":"DevOps/aws/#s3","title":"S3","text":"<p>S3 est un serveur de fichiers qui permet de stocker \u00e0 distance des fichiers plats. On peut copier, d\u00e9placer et supprimer de mani\u00e8re bidirectionnel. Il est tr\u00e8s souvent utilis\u00e9 pour stocker des fichiers m\u00e9dia en tout genre ou des configurations.</p> Int\u00e9ractions avec le CLI<pre><code>$ aws s3api create-bucket --bucket arichard --region us-east-1 # (1)\n{\n    \"Location\": \"/arichard\"\n}\n\n$ aws s3 cp mkdocs.yml s3://arichard/mkdocs.yml # (2)\nupload: ./mkdocs.yml to s3://arichard/mkdocs.yml  \n\n$ aws s3 cp s3://arichard/mkdocs.yml mkdocs2.yml # (3)\ndownload: s3://arichard/mkdocs.yml to ./mkdocs2.yml\n\n$ rm mkdocs2.yml &amp;&amp; aws s3 rm s3://arichard/mkdocs.yml # (4)\ndelete: s3://arichard/mkdocs.yml\n\n$ aws s3api delete-bucket --bucket arichard # (5)\n</code></pre> <ol> <li>On cr\u00e9er un bucket S3 en lui fournissant le nom. Il n'y que la r\u00e9gion us-east-1 qui supporte les buckets s3 pour le moment.</li> <li>On copie un fichier local vers le S3 en lui fournissant le chemin cible.</li> <li>On t\u00e9l\u00e9charge un fichier sur le S3 avec son chemin et l'endroit o\u00f9 nous voulons le persister sur la machine locale.</li> <li>On supprime le fichier local t\u00e9l\u00e9charg\u00e9 et le fichier distant.</li> <li>On supprime le S3 en lui fournissant le nom.</li> </ol>"},{"location":"DevOps/aws/#ec2","title":"EC2","text":"<p>EC2 est un service de cr\u00e9ation de machine virtuelle en cloud. (Elastic Cloud Computing)</p> <p>Il est \"\u00e9lastique\" car on peut moduler ses composants en fonction du besoin (CPU, RAM, Stockage, R\u00e9seau). Il existe des configurations par d\u00e9faut que nous pouvons utiliser appel\u00e9 AMI (Amazon Machine Image).</p>"},{"location":"DevOps/aws/#creer-une-instance","title":"Cr\u00e9er une instance","text":""},{"location":"DevOps/aws/#afficher-les-meta-donnees-des-instances","title":"Afficher les m\u00e9ta-donn\u00e9es des instances","text":""},{"location":"DevOps/aws/#modifier-une-instance-deja-creee","title":"Modifier une instance d\u00e9j\u00e0 cr\u00e9\u00e9e","text":""},{"location":"DevOps/aws/#faire-communiquer-deux-instances-entre-elles","title":"Faire communiquer deux instances entre-elles","text":""},{"location":"DevOps/aws/#nettoyer-les-ressources","title":"Nettoyer les ressources","text":"<p>TODO</p>"},{"location":"DevOps/aws/#scaling","title":"Scaling","text":"<p>AWS propose deux mani\u00e8res du supporter la charge entrante. Il y a :</p> <ul> <li>Auto scaling groups,</li> <li>ELB (Elastic Load Balancer)</li> </ul>"},{"location":"DevOps/aws/#auto-scaling-groups","title":"Auto scaling groups","text":"<p>Un groupe \u00e9chelonne horizontalement les ressources en fonction d'un crit\u00e8re donn\u00e9 (exemple: cr\u00e9er une nouvelle instance si le CPU d\u00e9passe 80% d'utilisation). Un groupe permet de d\u00e9finir un nombre minimum, d\u00e9sir\u00e9 et maximum d'instances r\u00e9pliqu\u00e9es.</p>"},{"location":"DevOps/aws/#ejb","title":"EJB","text":"<p>Un EJB absorbe la charge la r\u00e9partissant afin d'obtenir la plus faible latence. Il existe deux types de load balancer: applicatif et r\u00e9seau. l'EJB applicatif sert \u00e0 r\u00e9partir le traffic sur plusieurs EC2 tandis que l'EJB R\u00e9seau absorbe en amont le traffic r\u00e9seau.</p> <p>TODO</p>"},{"location":"DevOps/aws/#ebs","title":"EBS","text":"<p>TODO</p>"},{"location":"DevOps/aws/#rds","title":"RDS","text":"<p>TODO</p>"},{"location":"DevOps/aws/#dynamodb","title":"DynamoDB","text":"<p>TODO</p>"},{"location":"DevOps/aws/#lambda","title":"Lambda","text":""},{"location":"DevOps/aws/#deployer-une-lambda-sous-forme-de-conteneur-docker","title":"D\u00e9ployer une Lambda sous forme de conteneur Docker","text":""},{"location":"DevOps/aws/#parametrer-les-autorisations-de-la-fonction","title":"Param\u00e9trer les autorisations de la fonction","text":""},{"location":"DevOps/aws/#nettoyer-les-ressources_1","title":"Nettoyer les ressources","text":"<p>TODO</p>"},{"location":"DevOps/aws/#sqs-sns","title":"SQS &amp; SNS","text":"<p>TODO</p>"},{"location":"DevOps/aws/#cloudwatch","title":"CloudWatch","text":""},{"location":"DevOps/aws/#creer-un-groupe-de-log","title":"Cr\u00e9er un groupe de log","text":""},{"location":"DevOps/aws/#creer-ses-propres-kpi","title":"Cr\u00e9er ses propres KPI","text":""},{"location":"DevOps/aws/#creer-des-alarmes","title":"Cr\u00e9er des alarmes","text":""},{"location":"DevOps/aws/#mettre-en-place-un-workflow-de-monitoring","title":"Mettre en place un workflow de monitoring","text":""},{"location":"DevOps/aws/#nettoyer-les-ressources_2","title":"Nettoyer les ressources","text":"<p>TODO</p>"},{"location":"DevOps/aws/#api-gateway","title":"API Gateway","text":"<p>TODO\"</p>"},{"location":"DevOps/aws/#ecr","title":"ECR","text":"<p>TODO</p>"},{"location":"DevOps/aws/#kubernetes","title":"Kubernetes","text":"<p>TODO</p>"},{"location":"DevOps/gitlab/","title":"Gitlab","text":"<p>TODO</p>"},{"location":"DevOps/gitlab/#integration-continue-avec-gitlab-ci","title":"Int\u00e9gration continue avec Gitlab CI","text":"<p>TODO</p>"},{"location":"DevOps/gitlab/#deploiement-continue-de-documentation-avec-gitlab-pages","title":"D\u00e9ploiement continue de documentation avec Gitlab Pages","text":"<p>TODO</p>"},{"location":"DevOps/gitlab/#hebergement-de-livrables-docker-avec-gitlab-registry","title":"H\u00e9bergement de livrables docker avec Gitlab Registry","text":"<p>TODO</p>"},{"location":"DevOps/kubejob/","title":"Cr\u00e9er et d\u00e9ployer un job kubernetes","text":"<p>WIP</p>"},{"location":"DevOps/pypi/","title":"Cr\u00e9er et d\u00e9ployer un package python sur PyPI","text":"<p>TODO</p>"},{"location":"DevOps/pypi/#creer-un-package-en-python","title":"Cr\u00e9er un package en python","text":""},{"location":"DevOps/pypi/#mettre-en-place-le-setuppy","title":"Mettre en place le setup.py","text":""},{"location":"DevOps/pypi/#bonnes-pratiques","title":"Bonnes pratiques","text":"<p>TODO</p>"},{"location":"DevOps/pypi/#deploiement-sur-la-plateforme","title":"D\u00e9ploiement sur la plateforme","text":"<p>TODO</p>"},{"location":"DevOps/pypi/#integration-avec-librariesio","title":"Int\u00e9gration avec libraries.io","text":"<p>TODO</p>"},{"location":"DevOps/terraform/","title":"Terraform","text":"<p>TODO</p>"},{"location":"DevOps/terraform/#installation-sur-linux","title":"Installation sur Linux","text":"<p>TODO</p>"},{"location":"DevOps/terraform/#operations-classiques","title":"Op\u00e9rations classiques","text":""},{"location":"DevOps/terraform/#creation-dune-infra","title":"Cr\u00e9ation d'une infra","text":""},{"location":"DevOps/terraform/#modification-dune-infra","title":"Modification d'une infra","text":""},{"location":"DevOps/terraform/#ajout-dinputs-et-doutputs","title":"Ajout d'inputs et d'outputs","text":""},{"location":"DevOps/terraform/#nettoyage-dune-infra","title":"Nettoyage d'une infra","text":"<p>TODO</p>"},{"location":"DevOps/terraform/#stockage-du-state-a-distance","title":"Stockage du state \u00e0 distance","text":"<p>TODO</p>"},{"location":"DevOps/terraform/#generation-dun-graphique","title":"G\u00e9n\u00e9ration d'un graphique","text":"<p>Il est possible de g\u00e9n\u00e9rer un graphique \u00e0 l'aide de la librairie Graphviz</p> <p>Pour cela il faut installer Graphviz</p> <pre><code>sudo apt install graphviz\n</code></pre> <p>Puis, executer la commande suivante</p> <pre><code>terraform graph  | dot -Tsvg -Gfontcolor=blue -Glabel=\"My AWS infrastructure\" &gt; graph.svg\n</code></pre>"},{"location":"backend/backend-golang/","title":"Cr\u00e9er et d\u00e9ployer un backend en go","text":""},{"location":"backend/backend-golang/#initialisation-du-projet","title":"Initialisation du projet","text":"<p>WIP</p>"},{"location":"backend/backend-golang/#creer-une-image-docker","title":"Cr\u00e9er une image Docker","text":"<p>WIP</p>"},{"location":"backend/backend-java/","title":"G\u00e9n\u00e9rer rapidement un backend en Java","text":""},{"location":"backend/backend-java/#generer-un-projet-spring-boot-avec-spring-initializer","title":"G\u00e9n\u00e9rer un projet Spring Boot avec Spring Initializer","text":"<p>Se rendre sur https://start.spring.io/.</p>"},{"location":"backend/backend-java/#creer-une-image-docker","title":"Cr\u00e9er une image Docker","text":"<p>Pour cr\u00e9er une image Docker compatible avec une application Spring, il faut surcharg\u00e9 l'image principale de gradle pour pouvoir g\u00e9n\u00e9rer le livrable et ensuite le copi\u00e9 et utilis\u00e9 l'image du JDK GraalVM pour le runtime.</p> <pre><code>FROM gradle:8.1.1-jdk17-alpine AS build\nCOPY --chown=gradle:gradle . /home/gradle/src\nWORKDIR /home/gradle/src\nRUN gradle build --no-daemon\n\nFROM ghcr.io/graalvm/jdk-community:17-ol9\n\nEXPOSE 8080\n\nCOPY --from=build /home/gradle/src/build/libs/*.jar spring-boot-application.jar\n\nENTRYPOINT [\"java\", \"-XX:+UnlockExperimentalVMOptions\", \"-Djava.security.egd=file:/dev/./urandom\",\"-jar\",\"spring-boot-application.jar\"]\n</code></pre>"},{"location":"backend/backend-java/#deployer-un-backend-en-spring-boot-sur-aws","title":"D\u00e9ployer un backend en Spring Boot sur AWS","text":"<p>WIP</p>"},{"location":"backend/backend-java/#faire-un-heap-dump-dun-container-light-java-deploye-sur-k8s","title":"Faire un heap dump d'un container light java d\u00e9ploy\u00e9 sur k8s","text":"<p>On utilise l'utilitaire <code>jcmd</code> packag\u00e9 avec tout openjdk.</p> <p>Quand on a tr\u00e8s peu d'outils \u00e0 disposition on devient cr\u00e9atif. Pour copier des fichiers vers l'ext\u00e9rieur il faut avoir le binaire <code>tar</code> d'install\u00e9 dans le container pour pouvoir executer la commande <code>kubectl cp &lt;source&gt; &lt;desitination&gt;</code>.</p> <p>Quand il n'est pas installer, on peut toujours utiliser la sortie standard et piper \u00e7a dans un fichier. On encode en base64 pour \u00e9viter de corrompre le fichier avec un mauvais affichage.</p> <pre><code>kubectl exec &lt;pod&gt; -- bash -c \"jcmd 1 GC.run\" # Pour clean avant de record la m\u00e9moire\nsleep 10\nkubectl exec &lt;pod&gt; -- bash -c \"jcmd 1 GC.heap_dump filename=/tmp/dump.hprof\"\nkubectl exec &lt;pod&gt; -- bash -c \"base64 /tmp/dump.hprof &gt; /tmp/dump64.hprof\"\nkubectl exec &lt;pod&gt; -- bash -c \"cat /tmp/dump64.hprof\" | base64 -d &gt; ~/dump.hprof\n</code></pre> <p>Il ne vous reste plus qu'\u00e0 le loader dans VisualVM ou JProfiler.</p>"},{"location":"backend/backend-java/#faire-un-recording-jfr-dun-container-light-java-deploye-sur-k8s","title":"Faire un recording JFR d'un container light java d\u00e9ploy\u00e9 sur k8s","text":"<p>M\u00eame process pour le transfert de fichier, il n'y a que la commande qui change.</p> <pre><code>kubectl exec &lt;pod&gt; -- bash -c \"jcmd 1 JFR.start duration=1h delay=5s filename=/tmp/recording.jfr\"\n# Maintenant on fait nos op\u00e9rations pendant une heure\nkubectl exec &lt;pod&gt; -- bash -c \"base64 /tmp/recording.jfr &gt; /tmp/recording64.jfr\"\nkubectl exec &lt;pod&gt; -- bash -c \"cat /tmp/recording64.jfr\" | base64 -d &gt; ~/recording.jfr\n</code></pre> <p>Et ensuite on le load dans VisualVM ou JProfiler.</p>"},{"location":"data/mojo/","title":"LLM avec Mojo et Python","text":""},{"location":"data/pandas/","title":"Pandas (IO + Graphiques avanc\u00e9es) avec Python","text":"<p>WIP</p>"},{"location":"data/postgres/","title":"Entretien d'une base PostgreSQL","text":""},{"location":"data/postgres/#recuperation-de-lespace-disque-apres-suppression","title":"R\u00e9cup\u00e9ration de l'espace disque apr\u00e8s suppression","text":"<p>Quand une ligne est supprim\u00e9e, l'espace disque n'est pas directement rendue. Il y a un m\u00e9chanisme de d\u00e9fragmentation de la base s'appelant VACUUM permettant de lib\u00e9rer l'allocation disque</p> <p>Si vous ne poss\u00e8dez pas ou peu de place disque de base, les processus d'autovacuum ne se d\u00e9clencheront pas avant 200.000.000 transactions SQL. C'est beaucoup de transactions et pour la plupart des applications, ce seuil ne sera jamais atteint.</p> <p>Voici la requ\u00eate permettant de r\u00e9cup\u00e9rer les tables concern\u00e9es qui n\u00e9cessite une lib\u00e9ration m\u00e9moire</p> <pre><code>SELECT relname FROM pg_stat_user_tables WHERE n_dead_tup &gt; 0\n</code></pre> <p>Cette requ\u00eate r\u00e9cup\u00e9re tous les noms des tables ayant des lignes de donn\u00e9es mortes. Il vous suffit par la suite d'effectuer</p> <pre><code>VACUUM ANALYSE &lt;table_name&gt;\n</code></pre>"},{"location":"data/postgres/#les-types-de-vacuum","title":"les types de VACUUM","text":"<p>Il existe 4 types de vacuum.</p> <ul> <li>Le <code>VACUUM</code> classique, il vient lancer un requ\u00eate de nettoyage.</li> <li>Le <code>VACUUM FULL</code>, \u00e0 d\u00e9conseiller si c'est une base en production car celui vient lock toutes les transactions sur la table ou la base cibl\u00e9e par le vacuum.</li> <li>Le <code>VACUUM ANALYSE</code>, il permet en m\u00eame temps de recalculer les donn\u00e9es inscrites dans les tables techniques du serveur PostgreSQL.</li> <li>Le <code>VACUUM VERBOSE</code>, affichant plus de d\u00e9tail concernant l'op\u00e9ration.</li> </ul>"},{"location":"data/sql-joints/","title":"Jointures SQL","text":"<p>Il y a plusieurs types de jointures que l'on peut faire lorsque deux ou plusieurs tables sont en relation. Il est facile de vite les confondre. C'est pourquoi j'\u00e9cris cette note pour \u00e9viter que cela m'arrive \u00e0 l'avenir.</p> <p></p> <p>Voici la liste des diff\u00e9rentes techniques de jointure qui sont utilis\u00e9es :</p> <ul> <li>INNER JOIN : jointure interne pour retourner les enregistrements quand la condition est vrai dans les 2 tables. C\u2019est l\u2019une des jointures les plus communes.</li> <li>CROSS JOIN : jointure crois\u00e9e permettant de faire le produit cart\u00e9sien de 2 tables. En d\u2019autres mots, permet de joindre chaque lignes d\u2019une table avec chaque lignes d\u2019une seconde table. Attention, le nombre de r\u00e9sultats est en g\u00e9n\u00e9ral tr\u00e8s \u00e9lev\u00e9.</li> <li>LEFT JOIN (ou LEFT OUTER JOIN) : jointure externe pour retourner tous les enregistrements de la table de gauche (LEFT = gauche) m\u00eame si la condition n\u2019est pas v\u00e9rifi\u00e9 dans l\u2019autre table.</li> <li>RIGHT JOIN (ou RIGHT OUTER JOIN) : jointure externe pour retourner tous les enregistrements de la table de droite (RIGHT = droite) m\u00eame si la condition n\u2019est pas v\u00e9rifi\u00e9 dans l\u2019autre table.</li> <li>FULL JOIN (ou FULL OUTER JOIN) : jointure externe pour retourner les r\u00e9sultats quand la condition est vrai dans au moins une des 2 tables.</li> <li>SELF JOIN : permet d\u2019effectuer une jointure d\u2019une table avec elle-m\u00eame comme si c\u2019\u00e9tait une autre table.</li> <li>NATURAL JOIN : jointure naturelle entre 2 tables s\u2019il y a au moins une colonne qui porte le m\u00eame nom entre les 2 tables SQL</li> </ul>"},{"location":"environnement-de-travail/chrome/","title":"Mettre \u00e0 jour Google Chrome sur linux","text":"<p>Chrome n'ayant pas de solution cl\u00e9 en main pour se mettre \u00e0 jour de mani\u00e8re autonome sur linux, il faut le faire en ligne de commande.</p> <p>Il faut en premier lier r\u00e9cup\u00e9rer le nouveau paquet:</p> <pre><code>wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n</code></pre> <p>Cette URL varie rarement. Elle permet de t\u00e9l\u00e9charger la derni\u00e8re version stable de Chrome.</p> <p>Par la suite il vous suffit juste de l'installer avec le gestionnaire de paquet bas niveau <code>dpkg</code> qui va venir surcharger les sources de votre Chrome install\u00e9 localement avec le nouveau paquet.</p> <pre><code>sudo dpkg -i google-chrome-stable_current_amd64.deb\n</code></pre> <p>Et enfin, n'oubliez pas de nettoyer !</p> <pre><code>rm google-chrome-stable_current_amd64.deb\n</code></pre>"},{"location":"environnement-de-travail/nvim/","title":"Personnaliser NVIM","text":"<p>WIP</p>"},{"location":"environnement-de-travail/terminal/","title":"Configurer ZSH sur linux","text":"<p>ZSH est un interpr\u00e9teur de commande tout comme Bash. Il permet d'aller plus vite gr\u00e2ce \u00e0 des raccourcis de commandes que nous pouvons obtenir avec les plugins oh-my-zsh.</p> <p>Il faut en premier lieu installer zsh:</p> <pre><code>sudo apt install zsh\n</code></pre> <p>Une fois install\u00e9, nous pouvons installer oh-my-zsh depuis le r\u00e9pertoire GitHub:</p> <pre><code>sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n</code></pre> <p>Passons maintenant \u00e0 la configuration. Il existe de nombreuses configurations et plugins \u00e0 disposition. Vous pouvez les retrouver sur la documentation officielle de oh-my-zsh.</p> <p>Le fichier o\u00f9 est persist\u00e9 la configuration se trouve \u00e0 cet endroit: <code>$HOME/.zshrc</code> Si vous ne savez pas par o\u00f9 commencer, voici ma configuration que j'utilise au quotidien:</p> <pre><code># global environmental variables\n\nexport LANG=fr_FR.UTF-8\nexport USR_LOCAL=\"/usr/local\"\nexport ZSH=\"$HOME/.oh-my-zsh\"\nexport ANDROID_HOME=\"$HOME/Android/Sdk\"\nexport NVM_DIR=\"$HOME/.nvm\"\nexport SDKMAN_DIR=\"$HOME/.sdkman\"\nexport GO_DIR=\"$USR_LOCAL/go\"\nexport JAVA_HOME=\"$HOME/.sdkman/candidates/java/current\"\nexport HOME_LOCAL=\"$HOME/.local\"\nexport PYENV_DIR=\"$HOME/.pyenv\"\nexport DART_CACHE_DIR=\"$HOME/.pub-cache\"\n\nexport PATH=$JAVA_HOME/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools/bin:$HOME/bin:$HOME_LOCAL/bin:$USR_LOCAL/bin:$GO_DIR/bin:$DART_CACHE_DIR/bin:$PYENV_DIR/bin:$PATH\n\n# ohmyzsh configurations\n\nVSCODE=code # use \"snap install code --classic\" to install visual studio code\nZSH_THEME=\"nicoulaj\"\nDISABLE_MAGIC_FUNCTIONS=\"true\"\nCOMPLETION_WAITING_DOTS=\"true\"\n\nZSH_WEB_SEARCH_ENGINES=(\n    github \"https://github.com/search?q=\"\n    stackoverflow \"https://stackoverflow.com/search?q=\"\n    google \"https://www.google.com/search?q=\"\n)\n\nplugins=(\n  git # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git\n  python # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/python\n  sudo # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/sudo\n  adb # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/adb\n  gitignore # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/gitignore\n  flutter # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/flutter\n  vscode # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/vscode\n  kubectl # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/kubectl\n  web-search # https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/web-search\n)\n\n\n# custom commands\n\nalias adb_show_layoutbounds='adb shell setprop debug.layout true ; adb shell service call activity 1599295570'\nalias adb_hide_layoutbounds='adb shell setprop debug.layout false ; adb shell service call activity 1599295570'\nalias adb_show_nav='adb shell settings put global policy_control null'\nalias adb_hide_nav='adb shell settings put global policy_control immersive.status=com.package1,com.package2:immersive.navigation=apps,-com.package3'\nalias adb_shutdown='adb shell reboot -p'\nalias adb_go_settings='adb shell am start -a android.settings.SETTINGS'\nalias adb_go_home='adb shell am start -a android.intent.action.MAIN -c android.intent.category.HOME'\nalias adb_go_wifi='adb shell am start -a android.intent.action.MAIN -n com.android.settings/.wifi.WifiSettings'\n\n\ninit_pyenv () {\n    eval \"$(pyenv init -)\"\n    eval \"$(pyenv virtualenv-init -)\"\n}\n\n# Loading configurations\n\n[ -s \"$HOME/.config/envman/load.sh\" ] &amp;&amp; source \"$HOME/.config/envman/load.sh\"\n[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] &amp;&amp; \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n[[ -s \"$HOME/.sdkman/bin/sdkman-init.sh\" ]] &amp;&amp; source \"$HOME/.sdkman/bin/sdkman-init.sh\"\n\nsource $ZSH/oh-my-zsh.sh\nsource &lt;(kubectl completion zsh)\n</code></pre> <p>Vous pouvez la copier ou vous en inspirer pour cr\u00e9er la votre. Une fois modifi\u00e9, il ne faut pas oublier de recharger l'interpr\u00e9teur actuel avec <code>source ~/.zshrc</code>, ou de tout simplement red\u00e9marrer le terminal.</p> <p>Il est possible de cr\u00e9er des touches personnalis\u00e9es sur le Moonlander ZSA. Il faut pour cela se rendre sur Oryx ou directement t\u00e9l\u00e9charger mes dotfiles qui contiennent le firmware du clavier qu'il ne reste plus qu'\u00e0 flash\u00e9.</p>"},{"location":"environnement-de-travail/typescript/","title":"Installer le tooling de TypeScript","text":"<p>TODO</p>"},{"location":"environnement-de-travail/typescript/#nvm-pour-switcher-de-version-nodejs","title":"NVM pour switcher de version NodeJS","text":"<p>TODO</p>"},{"location":"environnement-de-travail/typescript/#initialisation-du-packagejson","title":"Initialisation du package.json","text":"<p>TODO</p>"},{"location":"environnement-de-travail/typescript/#mise-en-place-du-tsconfigjson","title":"Mise en place du tsconfig.json","text":"<p>TODO</p>"},{"location":"environnement-de-travail/typescript/#nodemon-pour-le-hot-reload","title":"Nodemon pour le hot reload","text":"<p>TODO</p>"},{"location":"environnement-de-travail/typescript/#eslint","title":"ESLint","text":""},{"location":"environnement-de-travail/typescript/#eslintrc","title":".eslintrc","text":""},{"location":"environnement-de-travail/typescript/#eslintignore","title":".eslintignore","text":"<p>TODO</p>"},{"location":"environnement-de-travail/vscode/","title":"Personnaliser VSCode","text":"<p>Il est possible de facilement configurer l'environnement avec seulement un seul fichier. Ce fichier JSON doit avoir finir par l'extension <code>&lt;my_workspace&gt;.code-workspace</code> afin d'\u00eatre reconnu par l'\u00e9diteur.</p>"},{"location":"environnement-de-travail/vscode/#environnement-de-travail-multi-repo","title":"Environnement de travail multi-repo","text":"<p>Au sein m\u00eame du fichier, il faut ins\u00e9rer sous la cl\u00e9 <code>folders</code>, les dossiers des multiples projets utilis\u00e9s dans votre environnement de travail. Voici un exemple:</p> <pre><code>{\n  \"folders\": [\n    {\n      \"name\": \"Backend\",\n      \"path\": \"back-end-folder-name\"\n    },\n    {\n      \"name\": \"Frontend\",\n      \"path\": \"front-end-folder-name\"\n    },\n  ]\n}\n</code></pre> <p>L'id\u00e9al est d'avoir les dossiers des multiples projets sous un m\u00eame dossier parent lorsque vous les cloner, afin de faciliter la configuration.</p>"},{"location":"environnement-de-travail/vscode/#automatisation-des-actions","title":"Automatisation des actions","text":"<p>TODO</p>"},{"location":"environnement-de-travail/vscode/#configuration-du-mode-debug","title":"Configuration du mode debug","text":"<p>TODO</p>"},{"location":"environnement-de-travail/vscode/#configuration-generales-de-lediteur","title":"Configuration g\u00e9n\u00e9rales de l'\u00e9diteur","text":"<p>TODO</p>"},{"location":"environnement-de-travail/vscode/#extensions","title":"Extensions","text":"<p>TODO</p>"},{"location":"front/archi-css/","title":"Architecture CSS","text":"<p>Il existe diff\u00e9rentes mani\u00e8res d'organiser ses fichiers CSS dans les projets. Bien entendu, ces architectures peuvent \u00eatre impl\u00e9ment\u00e9es dans un m\u00eame projet en fonction du besoin.</p>"},{"location":"front/archi-css/#oocss","title":"OOCSS","text":"<p>L'approche orient\u00e9 objet CSS consiste a \u00e9crire des blocks CSS uniques et r\u00e9utilisables. Le but est des les importer dans les balises concern\u00e9es sans dupliquer du code dans le fichier CSS pour une classe sp\u00e9cifique. On fonctionne par composition.</p>"},{"location":"front/archi-css/#bem","title":"BEM","text":"<p>Block, Element &amp; Modifiers. C'est une architecture permettant de traiter des cas sp\u00e9cifiques tel que des animations compl\u00e8xes tout en maintenant un niveau de lisibilit\u00e9 convenable.</p>"},{"location":"front/archi-css/#smacss","title":"SMACSS","text":"<p>Scalar and Modular Architecture for CSS. Cela consiste \u00e0 d\u00e9coupler un \u00e9l\u00e9ment afin d'appliquer des contraintes sur le conteneur de celui-ci et sur son bloc complet. Cela demande beaucoup + de discipline que les deux autres m\u00e9thodes car il ne faut pas mettre de contraintes de padding/margin au sein du conteneur par exemple, cela pourrait interf\u00e9rer avec les autres cas d'utilisation de celui-ci.</p>"},{"location":"front/htmx/","title":"HTMX","text":""},{"location":"front/react/","title":"React","text":"<p>React est une librairie JS permettant de faire du rechargement r\u00e9actif \u00e0 l'aide d'un DOM virtuel. Cela permet d'avoir des applications web dynamiques sans rechargements de la page. C'est l'outil le plus utilis\u00e9 pour faire des sites en JS/TS d'apr\u00e8s NPM.</p>"},{"location":"front/react/#generation-dun-projet-react-en-typescript","title":"G\u00e9n\u00e9ration d'un projet React en TypeScript","text":"<pre><code>npx create-react-app my-app --template typescript\nnpm start\n</code></pre>"},{"location":"front/react/#creation-dun-composant-simple","title":"Cr\u00e9ation d'un composant simple","text":"<p>Avec TypeScript, on doit sp\u00e9cifier les types de chaques attributs/variables/fonctions. Il en va de m\u00eame pour les composants React.</p> <pre><code>interface ComponentProps { text?: string }\n\nexport function CustomComponent({ text }: ComponentProps) {\n  return (&lt;div&gt;{text}&lt;/div&gt;);\n}\n</code></pre> <p>Utilisation au sein d'un autre composant :</p> <pre><code>import { CustomComponent } from './CustomComponent.jsx';\n\nexport function App() {\n  let innerText: string = \"Hello World!\";\n  return (&lt;CustomComponent text={innerText}/&gt;);\n}\n</code></pre>"},{"location":"front/react/#hooks","title":"Hooks","text":""},{"location":"front/react/#usestate","title":"useState","text":"<p>useState permet de stocker une valeur mutable (par exemple, un input ou un fichier). Le DOM est recharg\u00e9 \u00e0 chaque fois que cette valeur stock\u00e9e est modifi\u00e9e.</p> <pre><code>import { React, useState } from 'react';\nimport { CustomComponent } from './CustomComponent.jsx';\n\nexport function App() {\n  const [innerText, setInnerText] = useState&lt;string&gt;(\"\");\n\n  return (\n      &lt;div&gt;\n          &lt;CustomComponent text={innerText}/&gt;\n          &lt;input value={innerHtml} onChange={e =&gt; setInnerHtml(e.target.value)}/&gt;\n      &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"front/react/#useeffect","title":"useEffect","text":"<p>useEffect effectue une t\u00e2che lorsqu'une valeur stock\u00e9e dans un state est alt\u00e9r\u00e9e. Si nous passons un tableau vide en param\u00e8tre, la t\u00e2che s'effectura une seule fois au chargement du DOM.</p> <pre><code>import { React, useState, useEffect } from 'react';\nimport { CustomComponent } from './CustomComponent.jsx';\n\nexport function App() {\n\n  const [count, setCount] = useState&lt;number&gt;(0);\n  const [innerText, setInnerText] = useState&lt;string&gt;(\"\");\n\n  useEffect(() =&gt; console.log(\"App component initialized\"), [])\n\n  useEffect(() =&gt; {\n    fetch('https://jsonplaceholder.typicode.com/todos/' + count)\n      .then(response =&gt; response.json())\n      .then(json =&gt; setInnerText(json.title))\n  }, [count, setInnerText]);\n\n  const increment = () =&gt; setCount(count + 1)\n\n  return (\n      &lt;div&gt;\n          &lt;CustomComponent text={innerText}/&gt;\n\n          &lt;button onClick={increment}&gt;Click hear {count}&lt;/button&gt;\n      &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"front/react/#gestion-des-appels-api","title":"Gestion des appels API","text":"<p>C'est pratique de savoir comment cr\u00e9er des composants graphiques, mais que fait-on si nous devons r\u00e9cup\u00e9rer de la donn\u00e9es depuis un serveur ? il faut \u00eatre en mesure de pouvoir organiser les appels en suivant les bonnes pratiques. Cela signifie:</p> <ul> <li>Ne pas stocker de cl\u00e9s priv\u00e9es ou de cl\u00e9s API c\u00f4t\u00e9 client pour la s\u00e9curit\u00e9.</li> <li>Eviter de dupliquer les appels dans chaque composant, il faut les centraliser dans un DAO.</li> </ul>"},{"location":"front/react/#utilisation-de-redux-avec-thunk","title":"Utilisation de Redux avec Thunk","text":"<p>Utiliser Redux nous permet d\u00e9coupler l'UI de la donn\u00e9es. On utilise Thunk pour ajouter un middleware qui nous permet d'abstraire les changements de state d\u00fbs \u00e0 la r\u00e9ponse API (loading, error, etc).</p>"},{"location":"front/react/#eviter-la-duplication-des-appels-lors-de-rafraichissement-du-dom","title":"\u00c9viter la duplication des appels lors de rafraichissement du DOM","text":"<p>Lorsque le state est mis \u00e0 jour, le DOM est recharg\u00e9 et les appels API sont malheuresement r\u00e9it\u00e9r\u00e9s. Pour cela, il faut utiliser le hook useMemo qui permet de mettre en cache la r\u00e9ponse \u00e0 cet appel.</p> <pre><code>import { React, useState, useMemo, useEffect } from 'react';\nimport { CustomComponent } from './CustomComponent.jsx';\n\nexport function App() {\n\n  const [count, setCount] = useState&lt;number&gt;(0);\n  const [innerText, setInnerText] = useState&lt;string&gt;(\"\");\n\n  const apiCall = (index: number): string async =&gt; {\n    let response = await fetch('https://jsonplaceholder.typicode.com/todos/' + index);\n    return reponse.json().title\n  } \n\n  const cachedData = useMemo(() =&gt; apiCall(count), [count])\n\n  useEffect(() =&gt; console.log(\"App component initialized\"), [])\n\n  useEffect(() =&gt; setInnerText(cachedData), [cachedData, setInnerText]);\n\n  const increment = () =&gt; setCount(count + 1)\n\n  return (\n      &lt;div&gt;\n          &lt;CustomComponent text={innerText}/&gt;\n\n          &lt;button onClick={increment}&gt;Click hear {count}&lt;/button&gt;\n      &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"front/svelte/","title":"Faire un front avec Svelte + SvelteKit","text":""},{"location":"techniques-de-travail/eisenhower-matrix/","title":"Matrice d'eisenhower","text":"<p>Quand on est seul dans une \u00e9quipe pendant les vacances ou que c'est le chaos total d'un point de vue organisationnel. Il est important de ne pas se d\u00e9courager et cat\u00e9goriser les t\u00e2ches pour ne pas s'\u00e9parpiller. Sinon on arrive \u00e0 rien et on fait du multi-tasking sans jamais arriver \u00e0 la fin de chaque t\u00e2che. </p> <p>Ce tableau permet de visualiser rapidement quelles sont les t\u00e2ches qui m\u00e9ritent toute notre attention. Il est important de prendre le temps de bien cat\u00e9goriser les t\u00e2ches pour \u00e9viter les rat\u00e9s. </p> <p>Aussi, \u00eatre accompagn\u00e9 d'un PO ou du client permet d'\u00e9viter le biais dans la cat\u00e9gorisation et rester align\u00e9 avec les objectifs.</p> <p></p>"},{"location":"techniques-de-travail/first-principles-thinking/","title":"First principles thinking","text":"<p>WIP</p>"}]}